name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build_and_tests:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      BUCKET_PORT: ${{ secrets.BUCKET_PORT }}
      BUCKET_REDIS_PORT: ${{ secrets.BUCKET_REDIS_PORT }}
      BUCKET_REDIS_HOST: ${{ secrets.BUCKET_REDIS_HOST }}
      LOGS_PATH: ${PWD}
      RABBITMQ_PROTOCOL: amqp
      RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
      RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
      RABBITMQ_PORT: 5672
      RABBITMQ_VHOST: /
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_HOST_URL: https://sonarcloud.io
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install --production=false

      - name: Build application
        run: npm run build

      # - name: Run tests
      #   run: npm run test:coverage

      # - name: Check test results
      #   run: |
      #     if [ -f coverage/lcov-report/index.html ]; then
      #       echo "Tests passed"
      #     else
      #       echo "Tests failed"
      #       exit 1
      #     fi

      # - name: Upload coverage report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: coverage-report
      #     path: coverage/lcov.info      

  sonarqube:
    needs: build_and_tests
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_HOST_URL: https://sonarcloud.io
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # - name: Download coverage report
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: coverage-report
      #     path: coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=src
            -Dsonar.exclusions=node_modules/**,dist/**,**/openapi.yaml,coverage/**
           
      # -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      # - name: Wait for SonarQube Quality Gate
      #   uses: SonarSource/sonarqube-quality-gate-action@v1
      #   with:
      #     pollingTimeoutSec: 600

      # - name: "Example show SonarQube Quality Gate Status value"
      #   run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  